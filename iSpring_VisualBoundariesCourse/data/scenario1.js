(function(){var loadHandler=window['s_{175A3792-0A11-4BDB-88B6-A0ED61BDCF91}'];var scenarioJson = "";var skinSettingsJson = {"buttonBorderRadius":10,"characterSpeech":{"type":"standard"},"colors":{"audio.playback":{"value":"#439431"},"audio.playback.background":{"alpha":"0.20000","value":"#000000"},"audio.playback.icon":{"value":"#FFFFFF"},"audio.preview.background":{"alpha":1,"value":"#4E5155"},"audio.preview.icon":{"alpha":"0.92000","value":"#FFFFFF"},"bullet.background":{"value":"#439431"},"bullet.text":{"value":"#FFFFFF"},"button.background.normal":{"alpha":1,"value":"#439431"},"button.background.over":{"alpha":1,"value":"#387C28"},"button.border.normal":{"alpha":1,"value":"#439431"},"button.border.over":{"alpha":1,"value":"#387C28"},"button.text.normal":{"value":"#FFFFFF"},"button.text.over":{"value":"#FFFFFF"},"characterSpeech.background":{"alpha":1,"value":"#FFFFFF"},"characterSpeech.text":{"value":"#34383D"},"hyperlinks":{"value":"#097CE7"},"message.background":{"alpha":1,"value":"#FFFFFF"},"message.text":{"value":"#34383D"},"pageBackground":{"value":"#DCDEE0"},"reply.background.normal":{"alpha":1,"value":"#FFFFFF"},"reply.background.over":{"alpha":"0.80784","value":"#F5FFF3"},"reply.text":{"value":"#34383D"},"title.background":{"alpha":"0.19216","value":"#34383D"},"title.text":{"value":"#E8E8E8"}},"fontFamily":"Arial","message":{"type":"standard"},"moodMeter":{"type":"standard","visible":false},"previewReplyAudio":false,"reply":{"bullet":{"type":"numbers"},"type":"standard"},"showSelectedReply":true,"showTitle":false};var i18nJson = {"AUTHORIZATION_FORM_CAPTION":"Authorization","AUTHORIZATION_FORM_ERROR_EMAIL":"Please enter a valid email address","AUTHORIZATION_FORM_ERROR_FIELD_REQUIRED":"Field is required","AUTHORIZATION_FORM_SEND_TO_STUDENT_EMAIL_HINT":"The role-play results will be sent to this email","AUTHORIZATION_FORM_TITLE":"Enter your details","Player.Accessible.AnswerOptions":"Answer options:","Player.Accessible.AriaLabelAudioPlayer":"Audio player","Player.Accessible.AriaLabelCharacterSpeech":"Character speech","Player.Accessible.AriaLabelFinalScene":"Final scene","Player.Accessible.AriaLabelFinalSceneButtons":"Final scene buttons","Player.Accessible.AriaLabelMessageButton":"Message button","Player.Accessible.AriaLabelScene":"Scene","Player.Accessible.AriaLabelSceneMessage":"Scene message","Player.Accessible.AriaLabelSettings":"Accessibility Settings","Player.Accessible.AriaLabelStartTalk":"Start role-play","Player.Accessible.AriaLabelTopPanel":"Top Bar","Player.Accessible.AriaLabelTrialBanner":"Created with iSpring Suite evaluation version. Learn more","Player.Accessible.CharacterEmotion":"Character emotion:","Player.Accessible.GotoAccessibleMode":"Turn on accessibility mode","Player.Accessible.GotoNormalMode":"Turn off accessibility mode","Player.Accessible.HiddenLink":"Go to the beginning of the scene","Player.Accessible.MoodAngry":"Angry","Player.Accessible.MoodHappy":"Happy","Player.Accessible.MoodNormal":"Normal","Player.Accessible.MoodPuzzled":"Puzzled","Player.Accessible.MoodUnhappy":"Unhappy","Player.Accessible.UserScore":"Your score: %USER_SCORE%","Player.Accessible.UserScoreAndMax":"Your score: %USER_SCORE% out of %MAX_SCORE%","Player.Application.Back":"Back","Player.Button.Back":"Back","Player.Button.Continue":"Continue","Player.Button.Finish":"Finish","Player.Button.No":"No","Player.Button.OK":"OK","Player.Button.Restart":"Restart","Player.Button.Skip":"Skip","Player.Button.Yes":"Yes","Player.Message.Btn.Text":"Continue","Player.Message.Start.Btn.Text":"Start","Player.Msg.ResumePrompt":"Would you like to resume where you left off?","Player.Msg.ResumePromptTitle":"Continue role-play","Player.Msg.SendReportToEmailFailed":"Failed to send role-play results to email. Do you want to retry?","Player.Msg.SendReportToUrlFailed":"Failed to send role-play results to server. Do you want to retry?","Player.Msg.SendingReport":"Sending results…","Player.Msg.UserScoreTemplate(%USER_SCORE%)":"Your score is %USER_SCORE% points","Player.Msg.UserScoreWithMaxScoreTemplate(%USER_SCORE%)":"Your score is %USER_SCORE% out of %MAX_SCORE% points"};var reportTemplate = "<scenarioReportTemplate version=\"4\" xmlns=\"http:\/\/www.ispringsolutions.com\/talkmaster\/scenario\/1\"><templates><template id=\"useTakersEmailSettings\"><![CDATA[false]]><\/template><\/templates><messages><message id=\"from\"><![CDATA[iSpring Solutions]]><\/message><message id=\"subject\"><![CDATA[[%SIM_STATUS%] Role-Play Results: &quot;%SIM_TITLE%&quot;]]><\/message><message id=\"user\"><![CDATA[User:]]><\/message><message id=\"userId\"><![CDATA[User:]]><\/message><message id=\"disclaimer\"><![CDATA[This is an automatically generated email to report role-play results. You are receiving this because the role-play author has specified your email address for sending role-play results.]]><\/message><message id=\"gradedScenario\"><![CDATA[Graded Role-Play]]><\/message><message id=\"surveyScenario\"><![CDATA[Role-Play]]><\/message><message id=\"userScore\"><![CDATA[User Score:]]><\/message><message id=\"maxScore\"><![CDATA[Maximum Score:]]><\/message><message id=\"passingScore\"><![CDATA[Passing Score:]]><\/message><message id=\"duration\"><![CDATA[Role-Play Duration:]]><\/message><message id=\"scenarioResult\"><![CDATA[Result:]]><\/message><message id=\"passed\"><![CDATA[Role-Play Passed]]><\/message><message id=\"failed\"><![CDATA[Role-Play Failed]]><\/message><message id=\"finished\"><![CDATA[Role-Play Finished]]><\/message><message id=\"score\"><![CDATA[Score:]]><\/message><message id=\"spentTimeFormat\"><![CDATA[%SPENT_TIME%]]><\/message><\/messages><\/scenarioReportTemplate>";var maxScore = '0';var reportUrl = "https://s4.ispringsolutions.com";loadHandler&&loadHandler(5, 's_000BE7F1-119C-40DA-8758-CF25D0992382', scenarioJson, skinSettingsJson, i18nJson, reportTemplate, maxScore, reportUrl);})();